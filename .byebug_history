quit
route_params
quit
match_data.names.first
route_params
quit
p match_data
match_data[name]
name = match_data.names
match_data[match_data.names]
match_data.to_s
match_data
match_data.names
match_data
quit
@req.params
@params
@req
quit
@params
@req
params
@req.params
quit
match_data.names
match_data
quit
pattern.match(req.path)
pattern
match.pattern.names
mtch.pattern.names
pattern.match("y")
pattern.match("x")
pattern.match("a")
pattern.match("/users").names
pattern.match("/users$").names
pattern.match("/users$/").names
pattern.match("/users/").names
pattern.match("/users").names
pattern.match("/users")
pattern =~ "/users"
pattern =~ "users"
pattern =~ "u"
yo2 = pattern.match(/\w+/)
yo.names
yo.class
yo.names
yo = pattern.match("/users")
pattern
pattern.match("")
pattern.match(".")
pattern.match("."))
pattern.match(/./)
pattern.match
controller_class
MatchData
pattern.match("/users/")
pattern.match("users")
pattern.match(/\w+/)
pattern.names
pattern.class
pattern
yo.names
yo.match(/\w+/)
yo.match(/\w+/))
yo.match(controller_name)
yo.match
yo
yo = Regexp.new(pattern)
Regexp.new(pattern).names
pattern.names
pattern
quit
DummyController.new
controller_class
quit
/\w+/.match(pattern)
pattern.to_s
pattern
quit
/\w+/.match(p).to_s.camel_case
/\w+/.match(p).to_s.capitalize
/\w+/.match(p)
/\w/.match(p)
p = pattern.to_s[8..-1]
pattern.to_s[8..-1]
pattern.to_s[9..-1]
pattern.to_s.chars - pattern.to_s.chars[(?-mix:^\]
pattern.to_s - pattern.to_s["(?-mix:^\"]
pattern.to_s - pattern.to_s[(?-mix:^\]
pattern.to_s
hello = /\w+/.match(pattern.to_s)
pattern
hello.to_s
hello
hello = /\w+/.match('pattern')
/\w+/.match('pattern')
/\w/.match('pattern')
/\w/.match('pattern'))
/\w/.match(pattern)
pattern(/\w/)
pattern(/\D/)
pattern.scan(/\D/)
action_name
controller_class
controller_name
pattern
c
example
n
example
c
c = controller_class.new(req, res)
res
req
controller_class
action_name
quit
@cookie.values
@cookie.val
@cookie
val
quit
val
quit
req.path_info
req.path
req
